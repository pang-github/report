package com.sweet.system.controller;import com.sweet.core.exception.ServiceException;import com.sweet.core.util.RedisUtil;import com.sweet.core.translationDict.DictConst;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import com.sweet.core.model.ResultBean;import com.sweet.core.model.system.LayuiPageInfo;import com.sweet.system.entity.Dict;import com.sweet.system.service.DictService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.ResponseBody;import java.util.*;/** * <p> * 基础字典 前端控制器 * </p> * * @author admin * @since 2019-12-16 */@Controller@RequestMapping("/admin/dict")public class DictController {    @Autowired    DictService dictService;    @Autowired    RedisUtil redisUtil;    /**     * 列表页     */    @RequestMapping("/dict_list")    public String list(){        return "/system/dict/dict_list";    }    /**     * 编辑页     */    @RequestMapping("/dict_edit")    public String edit(){        return "/system/dict/dict_edit";    }    /**     * 添加/编辑     */    @RequestMapping("/editDict")    @ResponseBody    public ResultBean editDict(Dict dict){        boolean b = dictService.getDictByCode(dict.getCode(),dict.getDictTypeId());        if(b){            throw new ServiceException("该编码已存在！");        }        dictService.saveOrUpdate(dict);        redisUtil.del(DictConst.DICT_TYPE_ID +dict.getDictTypeId());        return ResultBean.success(dict);    }    /**     * 删除     */    @RequestMapping("/delDict")    @ResponseBody    public ResultBean delDict(Dict dict){        dictService.removeById(dict);        redisUtil.del(DictConst.DICT_TYPE_ID +dict.getDictTypeId());        return ResultBean.success(dict);    }    /**     * 添加修改菜单     * @param menu     * @return     */    @RequestMapping("/getDictDetail")    @ResponseBody    public ResultBean getDictDetail(String dictId){        Dict dict = dictService.getById(dictId);        return ResultBean.success(dict);    }    /**     * 列表数据     */    @RequestMapping("/getDictList")    @ResponseBody    public LayuiPageInfo getDictList(Dict Dict){        LayuiPageInfo pageInfo = dictService.findPageBySpec(Dict);        return pageInfo;    }    /**     * 列表数据     */    @RequestMapping("/getDictListByTypeId")    @ResponseBody    public ResultBean getDictListByTypeId(@RequestBody Map<String,String> map){        Map dataMap = new HashMap();        for (Map.Entry<String, String> m : map.entrySet()) {            String key = m.getKey();            String dictId = m.getValue();            List<Dict> list = dictService.findByTypeId(dictId);            dataMap.put(key,list);        }        return ResultBean.success(dataMap);    }}