package com.sweet.system.controller;import com.sweet.core.exception.ServiceException;import com.sweet.core.model.ResultBean;import com.sweet.core.shiro.ShiroKit;import com.sweet.core.util.MD5Utils;import com.sweet.core.util.RedisUtil;import com.sweet.system.entity.User;import com.sweet.system.service.UserService;import org.apache.shiro.authc.*;import org.apache.shiro.subject.Subject;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.*;import java.util.Map;/** * 后台控制器 */@RequestMapping("/admin")@Controllerpublic class LoginController {    @Autowired    UserService userService;    @Autowired    RedisUtil redisUtil;    @RequestMapping("")    public String index(Model model){        model.addAttribute("shiroUser",ShiroKit.getUser());        return "/system/index";    }    @RequestMapping("/login")    public String login(ModelMap model){        //如果登录过直接跳转后台        if(ShiroKit.isUser()){            return "redirect:/admin/";        }        return "/system/user/login";    }    @RequestMapping("/register")    public String register(){        return "/system/user/register";    }    @PostMapping("/registerSubmit")    @ResponseBody    public ResultBean registerSubmit(User regUser){        String username = regUser.getUserName();        User user = userService.findByUserName(username);        if(user!=null){            throw new ServiceException("该用户名已被占用");        }        userService.addUser(regUser);        return ResultBean.success(user);    }    @PostMapping("/loginSubmit")    @ResponseBody    public ResultBean loginSubmit(String userName,String password,boolean remember){        // 密码MD5加密        password = MD5Utils.encrypt(userName, password);        UsernamePasswordToken token = new UsernamePasswordToken(userName.toLowerCase(), password,remember);        // 获取Subject对象        Subject subject = ShiroKit.getSubject();        try {            subject.login(token);            redisUtil.del("user:role:"+ShiroKit.getUser().getUserName());            redisUtil.del("user:menu:"+ShiroKit.getUser().getUserName());            return ResultBean.success();        } catch (UnknownAccountException e) {            throw new ServiceException(e.getMessage());        } catch (IncorrectCredentialsException e) {            throw new ServiceException(e.getMessage());        } catch (LockedAccountException e) {            throw new ServiceException(e.getMessage());        } catch (AuthenticationException e) {            throw new ServiceException("认证失败");        }    }}