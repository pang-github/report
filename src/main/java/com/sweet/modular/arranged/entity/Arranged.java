package com.sweet.modular.arranged.entity;import com.baomidou.mybatisplus.annotation.TableField;import com.baomidou.mybatisplus.annotation.TableId;import com.baomidou.mybatisplus.annotation.TableName;import com.baomidou.mybatisplus.annotation.TableName;import com.baomidou.mybatisplus.extension.activerecord.Model;import java.time.LocalDateTime;import java.io.Serializable;import java.util.Date;import io.swagger.annotations.ApiModel;import io.swagger.annotations.ApiModelProperty;import lombok.Data;import lombok.EqualsAndHashCode;import lombok.experimental.Accessors;/** * <p> * 预约信息 * </p> * * @author admin * @since 2020-04-03 */@Data@EqualsAndHashCode(callSuper = false)@Accessors(chain = true)@TableName("business_arranged")@ApiModel(value="Arranged对象", description="预约信息")public class Arranged extends Model<Arranged> {    private static final long serialVersionUID = 1L;    @TableField(value = "id")    private String id;    @ApiModelProperty(value = "预约人id")    @TableField(value = "patient_id")    private String patientId;    @ApiModelProperty(value = "预约医师id")    @TableField(value = "user_id")    private String userId;    @ApiModelProperty(value = "预约人")    @TableField(value = "patient_name")    private String patientName;    @ApiModelProperty(value = "预约医师")    @TableField(value = "user_name")    private String userName;    @ApiModelProperty(value = "预约地点")    @TableField(value = "arranged_site")    private String arrangedSite;    @ApiModelProperty(value = "预约内容")    @TableField(value = "arranged_cont")    private String arrangedCont;    @ApiModelProperty(value = "预约人数")    @TableField(value = "arranged_number")    private String arrangedNumber;    @ApiModelProperty(value = "预约时间")    @TableField(value = "arranged_time")    private Date arrangedTime;    @ApiModelProperty(value = "创建时间")    @TableField(value = "create_time")    private Date createTime;    @Override    protected Serializable pkVal() {        return null;    }}