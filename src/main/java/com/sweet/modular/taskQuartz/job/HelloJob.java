package com.sweet.modular.taskQuartz.job;import cn.hutool.core.date.DateUtil;import com.sweet.core.util.SpringContextUtil;import com.sweet.core.util.StringUtil;import com.sweet.modular.patient.entity.Patient;import com.sweet.modular.patient.mapper.PatientMapper;import com.sweet.modular.patient.service.PatientService;import com.sweet.modular.taskQuartz.entity.TaskQuartz;import com.sweet.modular.taskQuartz.service.TaskQuartzService;import com.sweet.modular.taskdetail.entity.Taskdetail;import com.sweet.modular.taskdetail.service.TaskdetailService;import com.sweet.modular.template.entity.Template;import com.sweet.modular.template.service.TemplateService;import com.sweet.modular.weixin.service.WeiXinService;import com.sweet.system.entity.User;import com.sweet.system.service.UserService;import lombok.Data;import lombok.extern.slf4j.Slf4j;import me.chanjar.weixin.common.error.WxErrorException;import me.chanjar.weixin.mp.bean.template.WxMpTemplateData;import org.apache.shiro.mgt.SecurityManager;import org.apache.shiro.util.ThreadContext;import org.quartz.Job;import org.quartz.JobExecutionContext;import org.quartz.JobExecutionException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import java.io.Serializable;import java.util.ArrayList;import java.util.Date;import java.util.List;@Slf4jpublic class HelloJob  implements Job, Serializable {    @Autowired    UserService userService;    @Autowired    TaskQuartzService taskQuartzService;    @Autowired    PatientMapper patientMapper;    @Autowired    WeiXinService weiXinService;    @Value("${system.domain}")    public String domain;    @Autowired    TemplateService templateService;    @Autowired    TaskdetailService taskdetailService;    private static final SecurityManager securityManager = SpringContextUtil.getApplicationContext().getBean(SecurityManager.class);    @Override    public void execute(JobExecutionContext context) throws JobExecutionException {        if(ThreadContext.getSecurityManager()==null){            ThreadContext.bind(securityManager);        }        try {            log.info("Hello Job执行时间: " + new Date());            //先获取任务            String taskId = String.valueOf(context.getJobDetail().getJobDataMap().get("taskId"));            TaskQuartz quartz = taskQuartzService.getById(taskId);            List<Patient> patientList = patientMapper.getPatientByType(quartz.getPatientType());            patientList.stream().forEach(patient -> {                String patientName = patient.getPatientName();                String createTime = DateUtil.formatDate(new Date());                List<WxMpTemplateData> data = new ArrayList<>();                data.add(new WxMpTemplateData("first","宁寿堂健康管理提醒您提交健康档案"));                data.add(new WxMpTemplateData("keyword1",patientName));                data.add(new WxMpTemplateData("keyword2", DateUtil.formatDate(new Date())));                data.add(new WxMpTemplateData("keyword3","健康调查"));                data.add(new WxMpTemplateData("remark", "点击查看详情"));                Template template =  templateService.getById(quartz.getTplId());                Taskdetail taskdetail = new Taskdetail();                taskdetail.setTaskName(quartz.getJobName());                taskdetail.setContent(template.getContent());                taskdetail.setTaskId(taskId);                taskdetail.setPatientId(patient.getId());                taskdetail.setPatientName(patientName);                taskdetailService = SpringContextUtil.getApplicationContext().getBean(taskdetailService.getClass());                taskdetailService.save(taskdetail);                User user = userService.getById(patient.getUserid());                if(StringUtil.isNotEmpty(user.getOpenId())){                    String url = domain+"/weixin/follow?detailId="+taskdetail.getId();                    try {                        weiXinService.sendTemplateMessage(WeiXinService.CASE_INFORM,user.getOpenId(),data,url);                    } catch (WxErrorException e) {                        e.printStackTrace();                    }                }            });            System.out.println(patientList);        } catch (Exception e) {            e.printStackTrace();        }    }}