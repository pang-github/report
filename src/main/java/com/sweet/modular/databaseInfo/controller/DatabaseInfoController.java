package com.sweet.modular.databaseInfo.controller;import com.sweet.core.translationDict.DictParam;import com.sweet.core.translationDict.TranslationDict;import org.springframework.web.bind.annotation.RequestMapping;import com.sweet.core.model.ResultBean;import com.sweet.core.model.system.LayuiPageInfo;import com.sweet.modular.databaseInfo.entity.DatabaseInfo;import com.sweet.modular.databaseInfo.service.DatabaseInfoService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import com.sweet.core.util.StringUtil;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.stereotype.Controller;import java.util.Date;import java.util.List;/** * <p> * 数据库信息表 前端控制器 * </p> * * @author test * @since 2020-05-18 */@Controller@RequestMapping("/admin/databaseInfo")public class DatabaseInfoController {    @Autowired    DatabaseInfoService databaseInfoService;    /**     * 列表页     */    @RequestMapping("/databaseInfo_list")    public String list(){        return "/modular/databaseInfo/databaseInfo_list";    }    /**     * 编辑页     */    @RequestMapping("/databaseInfo_edit")    public String edit(){        return "/modular/databaseInfo/databaseInfo_edit";    }    /**     * 添加/编辑     */    @RequestMapping("/editDatabaseInfo")    @ResponseBody    public ResultBean editDatabaseInfo(DatabaseInfo databaseInfo){        databaseInfo.setCreateTime(new Date());        databaseInfoService.saveOrUpdate(databaseInfo);        return ResultBean.success(databaseInfo);    }    /**     * 删除     */    @RequestMapping("/delDatabaseInfo")    @ResponseBody    public ResultBean delDatabaseInfo(DatabaseInfo databaseInfo){        databaseInfoService.removeById(databaseInfo);        return ResultBean.success(databaseInfo);    }    /**     * 添加修改菜单     * @param     * @return     */    @RequestMapping("/getDatabaseInfoDetail")    @ResponseBody    public ResultBean getDatabaseInfoDetail(String id){        DatabaseInfo databaseInfo = databaseInfoService.getById(id);        return ResultBean.success(databaseInfo);    }    /**     * 列表数据     */    @RequestMapping("/getDatabaseInfoList")    @ResponseBody    @TranslationDict({    })    public LayuiPageInfo getDatabaseInfoList(DatabaseInfo DatabaseInfo){        LayuiPageInfo pageInfo = databaseInfoService.findPageBySpec(DatabaseInfo);        return pageInfo;    }    /**     * 列表数据     */    @RequestMapping("/getDbList")    @ResponseBody    @TranslationDict({    })    public ResultBean getDbList(){        List<DatabaseInfo> list = databaseInfoService.list();        return ResultBean.success(list);    }}