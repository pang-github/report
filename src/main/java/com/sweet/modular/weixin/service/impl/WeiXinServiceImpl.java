package com.sweet.modular.weixin.service.impl;import cn.hutool.core.date.DateUtil;import com.alibaba.fastjson.JSON;import com.sweet.core.exception.ServiceException;import com.sweet.core.util.JavaSmsApi;import com.sweet.core.util.RedisUtil;import com.sweet.modular.arranged.entity.Arranged;import com.sweet.modular.arranged.service.ArrangedService;import com.sweet.modular.patient.entity.Patient;import com.sweet.modular.patient.service.PatientService;import com.sweet.modular.record.entity.Record;import com.sweet.modular.weixin.mapper.WeiXinMapper;import com.sweet.modular.weixin.service.WeiXinService;import me.chanjar.weixin.common.error.WxErrorException;import me.chanjar.weixin.mp.api.WxMpService;import me.chanjar.weixin.mp.bean.template.WxMpTemplateData;import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.scheduling.annotation.Async;import org.springframework.stereotype.Service;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.*;import java.util.stream.Stream;@Servicepublic class WeiXinServiceImpl implements WeiXinService {    @Autowired    ArrangedService arrangedService;    @Autowired    PatientService patientService;    @Autowired    WeiXinMapper weiXinMapper;    @Autowired    WxMpService wxMpService;    @Autowired    RedisUtil redisUtil;    @Override    @Async    public void sendTemplateMessage(String templateId, String openId, List<WxMpTemplateData> templateData,String url) throws WxErrorException {        WxMpTemplateMessage templateMessage = new WxMpTemplateMessage();        templateMessage.setTemplateId(templateId);        templateMessage.setToUser(openId);        templateMessage.setUrl(url);        templateMessage.setData(templateData);        wxMpService.getTemplateMsgService().sendTemplateMsg(templateMessage);    }    @Override    public Record getPatientrRecord(String patientId) {        return weiXinMapper.getPatientrRecord(patientId);    }    @Override    public boolean arrangedwhere(Date stime,String patient_id) throws ParseException {        if(stime.compareTo(new Date())<0){//预约日期小于现在时间 才可以预约            throw new ServiceException("不可以预约的时间！");        }else{            SimpleDateFormat slt = new SimpleDateFormat("yyyy-MM-dd HH:mm");            Calendar cal = Calendar.getInstance();            cal.setTime(stime);            String year = String.valueOf(cal.get(Calendar.YEAR));//获取年份            String month=String.valueOf(cal.get(Calendar.MONTH)+1);//获取月份            String day=String.valueOf(cal.get(Calendar.DATE));//获取日            String timef = "";            String timer = "";            String err ="预约过了";            if(DateUtil.isAM(stime)){//上午还是下午                timef=year+"-"+month+"-"+day+" 00:00";                timer=year+"-"+month+"-"+day+" 12:00";                err = year+"-"+month+"-"+day+"上午预约过了";            }else{                timef=year+"-"+month+"-"+day+" 12:00";                timer=year+"-"+month+"-"+day+" 24:00";                err = year+"-"+month+"-"+day+"下午预约过了";            };            List<Arranged> a = arrangedService.getStime(timef,timer,patient_id);            if(a.size()>0){                throw new ServiceException(err);            }else{                //没有预约                return true;            }        }    }    @Override    public void sendSms(String mobile, String tplId, String code, String mode) {        if(mode.equals("dev")){            System.out.println("验证码为："+code);            redisUtil.set("smsCode:"+mobile,code,30);        }else if(mode.equals("online")){            Map map = new HashMap();            map.put("code",code);            String json = JavaSmsApi.tplSingleSend(mobile,tplId,map);            Map dataMap = (Map) JSON.parse(json);            if(dataMap.get("msg").equals("发送成功")){                redisUtil.set("smsCode:"+mobile,code,120);            }else{                throw new ServiceException("发送失败,"+dataMap.get("msg"));            }        }    }}