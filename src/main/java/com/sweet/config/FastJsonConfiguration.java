package com.sweet.config;import com.alibaba.fastjson.serializer.SerializeConfig;import com.alibaba.fastjson.serializer.SerializerFeature;import com.alibaba.fastjson.serializer.ToStringSerializer;import com.alibaba.fastjson.support.config.FastJsonConfig;import com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;import javafx.scene.chart.Chart;import org.apache.logging.log4j.Logger;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.http.MediaType;import org.springframework.http.converter.HttpMessageConverter;import org.springframework.http.converter.StringHttpMessageConverter;import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;import java.math.BigInteger;import java.nio.charset.Charset;import java.util.ArrayList;import java.util.Iterator;import java.util.List;//@Configurationpublic class FastJsonConfiguration implements WebMvcConfigurer {    @Override    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {        /**         * 先移除MappingJackson2HttpMessageConverter转换器，再加入fastjson转换器         */        Iterator<HttpMessageConverter<?>> iterator = converters.iterator();        while(iterator.hasNext()){            HttpMessageConverter<?> converter = iterator.next();            if(converter instanceof MappingJackson2HttpMessageConverter){                iterator.remove();            }        }        FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();        //自定义配置...        FastJsonConfig config = new FastJsonConfig();        config.setDateFormat("");        config.setSerializerFeatures(SerializerFeature.DisableCircularReferenceDetect,                SerializerFeature.WriteMapNullValue                ,SerializerFeature.WriteNullListAsEmpty,                SerializerFeature.WriteNullBooleanAsFalse,                SerializerFeature.WriteNullStringAsEmpty,SerializerFeature.WriteNullNumberAsZero);        //默认时间转换//        config.setDateFormat("yyyy-MM-dd HH:mm:ss");        config.setCharset(Charset.forName("utf-8"));        //解决Long转json精度丢失的问题        SerializeConfig serializeConfig = SerializeConfig.globalInstance;        serializeConfig.put(BigInteger.class, ToStringSerializer.instance);        serializeConfig.put(Long.class, ToStringSerializer.instance);        serializeConfig.put(Long.TYPE, ToStringSerializer.instance);        config.setSerializeConfig(serializeConfig);        fastJsonHttpMessageConverter.setFastJsonConfig(config);        //解决返回的json数据中文乱码问题        List<MediaType> fastMediaTypes = new ArrayList<MediaType>();        fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);        fastJsonHttpMessageConverter.setSupportedMediaTypes(fastMediaTypes);        //将转换器添加到转换列表        converters.add(fastJsonHttpMessageConverter);    }}