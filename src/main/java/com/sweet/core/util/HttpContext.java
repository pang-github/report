package com.sweet.core.util;import cn.hutool.json.JSON;import cn.hutool.json.JSONUtil;import org.springframework.http.HttpStatus;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;import java.util.Enumeration;import java.util.HashMap;import java.util.Map;/** * 快捷获取HttpServletRequest,HttpServletResponse * * @author stylefeng * @Date 2018/1/4 21:24 */public class HttpContext {    /**     * 判断是否是ajax请求     */    public static boolean isAjax(HttpServletRequest httpRequest) {        return (httpRequest.getHeader("X-Requested-With") != null                && "XMLHttpRequest"                .equalsIgnoreCase(httpRequest.getHeader("X-Requested-With").toString()));    }    public static void write(HttpServletResponse response,Object object){        response.setCharacterEncoding("UTF-8");        response.setContentType("application/json; charset=utf-8");        PrintWriter writer = null;        try {            writer = response.getWriter();        } catch (IOException e) {            e.printStackTrace();        }        //具体操作        writer.write(JSONUtil.toJsonStr(object));        //        writer.flush();        writer.close();    }    /**     * 获取请求的ip地址     *     * @author fengshuonan     * @Date 2018/7/23 下午3:44     */    public static String getIp() {        HttpServletRequest request = HttpContext.getRequest();        if (request == null) {            return "127.0.0.1";        } else {            return request.getRemoteHost();        }    }    /**     * 获取当前请求的Request对象     *     * @author fengshuonan     * @Date 2018/7/23 下午3:44     */    public static HttpServletRequest getRequest() {        ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();        if (requestAttributes == null) {            return null;        } else {            return requestAttributes.getRequest();        }    }    /**     * 获取当前请求的Response对象     *     * @author fengshuonan     * @Date 2018/7/23 下午3:44     */    public static HttpServletResponse getResponse() {        ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();        if (requestAttributes == null) {            return null;        } else {            return requestAttributes.getResponse();        }    }    /**     * 获取所有请求的值     *     * @author fengshuonan     * @Date 2018/7/23 下午3:44     */    public static Map<String, String> getRequestParameters() {        HashMap<String, String> values = new HashMap<>();        HttpServletRequest request = HttpContext.getRequest();        if (request == null) {            return values;        }        Enumeration enums = request.getParameterNames();        while (enums.hasMoreElements()) {            String paramName = (String) enums.nextElement();            String paramValue = request.getParameter(paramName);            values.put(paramName, paramValue);        }        return values;    }}