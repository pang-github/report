/** EasyWeb iframe v3.1.5 date:2019-10-05 License By http://easyweb.vip */// 以下代码是配置layui扩展模块的目录，每个页面都需要引入layui.config({    base: '/plugin/module/'}).extend({    formSelects: 'formSelects/formSelects-v4',    dropdown: 'dropdown/dropdown',    notice: 'notice/notice',    step: 'step-lay/step',    dtree: 'dtree/dtree',    citypicker: 'city-picker/city-picker',    tableSelect: 'tableSelect/tableSelect',    Cropper: 'Cropper/Cropper',    zTree: 'zTree/zTree',    introJs: 'introJs/introJs',    fileChoose: 'fileChoose/fileChoose',    tagsInput: 'tagsInput/tagsInput',    Drag: 'Drag/Drag',    CKEDITOR: 'ckeditor/ckeditor',    Split: 'Split/Split',    cascader: 'cascader/cascader',    treeTable: 'treeTable/treeTable',    xmSelect : 'xm-select',    tableChild: 'ext/tableChild',    numinput: 'numinput/numinput',}).use(['layer', 'admin'], function () {    var $ = layui.jquery;    var layer = layui.layer;    var admin = layui.admin;    // 移除loading动画    setTimeout(function () {        admin.removeLoading();    }, window == top ? 600 : 100);    //单击行勾选checkbox事件    $(document).on("click",".layui-table-body table.layui-table tbody tr", function () {        var index = $(this).attr('data-index');        var tableBox = $(this).parents('.layui-table-box');        //存在固定列        if (tableBox.find(".layui-table-fixed.layui-table-fixed-l").length>0) {            tableDiv = tableBox.find(".layui-table-fixed.layui-table-fixed-l");        } else {            tableDiv = tableBox.find(".layui-table-body.layui-table-main");        }        var checkCell = tableDiv.find("tr[data-index=" + index + "]").find("td div.laytable-cell-checkbox div.layui-form-checkbox I");        if (checkCell.length>0) {            checkCell.click();        }    });    $(document).on("click", "td div.laytable-cell-checkbox div.layui-form-checkbox", function (e) {        e.stopPropagation();    });    //单击行勾选radio事件    $(document).on("click",".layui-table-body table.layui-table tbody tr", function () {        var index = $(this).attr('data-index');        var tableBox = $(this).parents('.layui-table-box'); //存在固定列        if (tableBox.find(".layui-table-fixed.layui-table-fixed-l").length>0) {            tableDiv = tableBox.find(".layui-table-fixed.layui-table-fixed-l");        } else {            tableDiv = tableBox.find(".layui-table-body.layui-table-main"); }        var checkCell = tableDiv.find("tr[data-index=" + index + "]").find("td div.laytable-cell-radio div.layui-form-radio I");        if (checkCell.length>0) {            checkCell.click();        } });    $(document).on("click", "td div.laytable-cell-radio div.layui-form-radio", function (e) {        e.stopPropagation();    });    //搜索框回车事件    $(document).on('keydown', function (event) {        if (event.keyCode == 13) {            var html  = $('.layui-form').eq(0).find('[lay-submit]').click();            return false        }    });});var app = {    isEmpty: function (obj) {        if (typeof obj == "undefined" || obj == null || obj == "" || obj == undefined || obj == " ") {            return true;        } else {            return false;        }    },    isNotEmpty: function (obj) {        if (typeof obj == "undefined" || obj == null || obj == "" || obj == undefined || obj == " ") {            return false;        } else {            return true;        }    },    confirm:function (tip, ensure) {        top.layer.confirm(tip, {            skin: 'layui-layer-admin',            title: "提示"        }, function (layerIndex) {            ensure(layerIndex);        });    },    success:function (info,fun) {        top.layer.msg(info, {icon: 1,  time: 1200})    },    error:function (info,fun) {        top.layer.msg(info, {icon: 2,  time: 1200},function () {            if(app.isNotEmpty(fun)){                fun()            }        });    },    getUrlParam:function (name) {        //  获取地址栏的参数        var url = window.location.search;        //正则表达式筛选        var reg = new RegExp("(^|&)"+name+"=([^&]*)(&|$)");        //匹配参数        var result = url.substr(1).match(reg);        return result ? decodeURIComponent(result[2]):null;    },    closeTopLayer:function(index){        top.layer.close(index)    },    toHump:function(name) {        return name.replace(/\_(\w)/g, function(all, letter){            return letter.toUpperCase();        });    },    previewImg:function(obj) {        obj = obj.target;        var img = new Image();        img.src = obj.src;        var height = img.height + 50; //获取图片高度        var width = img.width; //获取图片宽度        var imgHtml = "<img src='" + obj.src + "' />";        //弹出层        layer.open({            type: 1,            shade: 0.3,            offset: 'auto',            area: [width + 'px',height+'px'],            shadeClose:true,//点击外围关闭弹窗            scrollbar: false,//不现实滚动条            title: "图片预览", //不显示标题            content: imgHtml, //捕获的元素，注意：最好该指定的元素要存放在body最外层，否则可能被其它的相对元素所影响            cancel: function () {                //layer.msg('捕获就是从页面已经存在的元素上，包裹layer的结构', { time: 5000, icon: 6 });            }        });    },    deleteImg:function (index,imageList) {        app.confirm("确定删除该图片吗?",function (layerIndex) {            imageList.splice(index,1)            app.closeTopLayer(layerIndex);        })    },    handleExceptions:function (data) {        const code = data.code;        const msg = data.message;        if((code!=0)&&(code!=200)){            this.error(msg,function () {                if(code==401){                    location.href = "/admin/login"                }            })        }    },    //获得数据字典    getDic:async function (data,vm) {        var res = await api.getDictList(data);        for(let item in data){            vm[item+'Dic'] = res[item                ];        }    },    //input只能输入金额    clearNoNum:function(obj){        obj.value = obj.value.replace(/[^\d.]/g,""); //清除"数字"和"."以外的字符        obj.value = obj.value.replace(/^\./g,""); //验证第一个字符是数字而不是        obj.value = obj.value.replace(/\.{2,}/g,"."); //只保留第一个. 清除多余的        obj.value = obj.value.replace(".","$#$").replace(/\./g,"").replace("$#$",".");        obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3'); //只能输入两个小数    },    //加法    accAdd:function(arg1,arg2){        var r1=0,r2=0,m,s1=arg1.toString(),s2=arg2.toString();        try{            if(s1.split(".")[1] != undefined )                r1=s1.split(".")[1].length;        }catch(e){}        try{            if(s2.split(".")[1] != undefined )                r2=s2.split(".")[1].length;        }catch(e){}        m=Math.pow(10,Math.max(r1,r2));        return (app.accMul(arg1,m)+app.accMul(arg2,m))/m;    },    //减法    Subtr:function(arg1,arg2){        var r1=0,r2=0,m,n,s1=arg1.toString(),s2=arg2.toString();        try{            if(s1.split(".")[1] != undefined )                r1=s1.split(".")[1].length;        }catch(e){}        try{            if(s2.split(".")[1] != undefined )                r2=s2.split(".")[1].length;        }catch(e){}        m=Math.pow(10,Math.max(r1,r2));        //last modify by deeka        //动态控制精度长度        n=(r1>=r2)?r1:r2;        return (app.accMul(arg1,m)-app.accMul(arg2,m))/m;    },    //乘法函数，用来得到精确的乘法结果    accMul:function (arg1, arg2) {        var m = 0, s1 = arg1.toString(), s2 = arg2.toString();        try {            if (s1.split(".")[1] != undefined)                m += s1.split(".")[1].length        } catch (e) {        }        try {            if (s2.split(".")[1] != undefined)                m += s2.split(".")[1].length        } catch (e) {        }        return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m)    },    //除法    accDiv:function(arg1,arg2){        var r1=0,r2=0,m,s1=arg1.toString(),s2=arg2.toString();        try{            if(s1.split(".")[1] != undefined )                r1=s1.split(".")[1].length;        }catch(e){}        try{            if(s2.split(".")[1] != undefined )                r2=s2.split(".")[1].length;        }catch(e){}        m=Math.pow(10,Math.max(r1,r2));        return (app.accMul(arg1,m))/(app.accMul(arg2,m));    }}var layuiUtil ={    //數字下拉彈窗(只需要在class加上layui-input-number)    numinput:function () {        layui.use(['numinput'], function () {            var numinput = layui.numinput;            numinput.init({                // 123：123键置顶, 789：789键置顶                topBtns: 123,                // 右侧功能按钮                rightBtns: true,                // 监听键盘事件                listening: true,                // 批量配置默认小数精确度                defaultPrec: '2'            });        })    }}