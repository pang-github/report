<!-- Logback configuration. See http://logback.qos.ch/manual/index.html --><configuration scan="true" scanPeriod="10 seconds">    <!--设置重要-->    <!-- magenta:洋红 -->    <!-- boldMagenta:粗红-->    <!-- cyan:青色 -->    <!-- white:白色 -->    <!-- magenta:洋红 -->    <property name="CONSOLE_LOG_PATTERN"              value=" %cyan(%date{yyyy-MM-dd HH:mm:ss}) %cyan(|) %green(%-5level) %cyan(|) %magenta(%thread) %cyan(|) %cyan(%logger) %cyan(|) %boldCyan(%msg%n)"/>    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">        <encoder charset="UTF-8">            <pattern>${CONSOLE_LOG_PATTERN}</pattern>        </encoder>    </appender>    <!--定义日志存放的位置，默认存放在项目启动的相对路径的目录-->    <springProperty scope="context" name="LOG_PATH" source="logging.path" defaultValue=" D:\spring\logs"/>    <!-- 每天生成日志文件,文件大小超过50则新生成一个文件,         同时将旧文件按${LOG_PATH}/info-%d{yyyyMMdd}.log.%i.zip格式压缩,文件保存30天 -->    <appender name="INFO_FILE"              class="ch.qos.logback.core.rolling.RollingFileAppender">        <!--<File>${LOG_PATH}/innovation-info.log</File> &lt;!&ndash; 日志名称 &ndash;&gt;-->        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_PATH}/innovation-info-%d{yyyy-MM-dd}.%i.log            </fileNamePattern>            <timeBasedFileNamingAndTriggeringPolicy                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">                <maxFileSize>50MB</maxFileSize>            </timeBasedFileNamingAndTriggeringPolicy>            <maxHistory>30</maxHistory>        </rollingPolicy>        <layout class="ch.qos.logback.classic.PatternLayout">            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}                -%msg%n            </Pattern>        </layout>    </appender>    <appender name="DEBUG_FILE"              class="ch.qos.logback.core.rolling.RollingFileAppender">        <!--<File>${LOG_PATH}/innovation-debug.log</File>-->        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_PATH}/innovation-debug-%d{yyyy-MM-dd}.%i.log            </fileNamePattern>            <timeBasedFileNamingAndTriggeringPolicy                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">                <maxFileSize>50MB</maxFileSize>            </timeBasedFileNamingAndTriggeringPolicy>            <maxHistory>30</maxHistory>        </rollingPolicy>        <layout class="ch.qos.logback.classic.PatternLayout">            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}                -%msg%n            </Pattern>        </layout>    </appender>    <appender name="ERROR_FILE"              class="ch.qos.logback.core.rolling.RollingFileAppender">        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">            <level>ERROR</level>        </filter>        <!--<File>${LOG_PATH}/innovation-error.log</File>-->        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_PATH}/innovation-error-%d{yyyy-MM-dd}.%i.log            </fileNamePattern>            <timeBasedFileNamingAndTriggeringPolicy                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">                <maxFileSize>50MB</maxFileSize>            </timeBasedFileNamingAndTriggeringPolicy>            <maxHistory>30</maxHistory>        </rollingPolicy>        <layout class="ch.qos.logback.classic.PatternLayout">            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}                -%msg%n            </Pattern>        </layout>    </appender>    <root level="INFO">        <appender-ref ref="CONSOLE"/>        <appender-ref ref="INFO_FILE"/>        <appender-ref ref="ERROR_FILE"/>        <appender-ref ref="DEBUG_FILE"/>    </root>    <!-- 常用的Pattern变量 -->    <!--      <pattern>          %d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n          Logger: %logger          Class: %class          File: %file          Caller: %caller          Line: %line          Message: %m          Method: %M          Relative: %relative          Thread: %thread          Exception: %ex          xException: %xEx          nopException: %nopex          rException: %rEx          Marker: %marker          %n      </pattern>    -->    <!--        作者：留住这时光        来源：CSDN        原文：https://blog.csdn.net/qq_33655674/article/details/82991363        版权声明：本文为博主原创文章，转载请附上博文链接！-->    <!--    作者：海中源-->    <!--    来源：CSDN-->    <!--    原文：https://blog.csdn.net/A169388842/article/details/84068734-->    <!--    版权声明：本文为博主原创文章，转载请附上博文链接！--></configuration>